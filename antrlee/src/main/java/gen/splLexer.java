package gen;// Generated from D:/sf/team-project-24spring-29/antrlee/src/main/spl.g4 by ANTLR 4.13.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class splLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		TYPE=1, STRUCT=2, IF=3, ELSE=4, WHILE=5, RETURN=6, DOT=7, SEMI=8, COMMA=9, 
		ASSIGN=10, LT=11, LE=12, GT=13, GE=14, NE=15, EQ=16, PLUS=17, MINUS=18, 
		MUL=19, DIV=20, AND=21, OR=22, NOT=23, LP=24, RP=25, LB=26, RB=27, LC=28, 
		RC=29, INT=30, HEX_INT=31, FLOAT=32, CHAR=33, ID=34, WS=35, INVALID_EXP=36;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"TYPE", "STRUCT", "IF", "ELSE", "WHILE", "RETURN", "DOT", "SEMI", "COMMA", 
			"ASSIGN", "LT", "LE", "GT", "GE", "NE", "EQ", "PLUS", "MINUS", "MUL", 
			"DIV", "AND", "OR", "NOT", "LP", "RP", "LB", "RB", "LC", "RC", "INT", 
			"HEX_INT", "FLOAT", "CHAR", "ESC_SEQ", "ID", "WS", "INVALID_EXP"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'struct'", "'if'", "'else'", "'while'", "'return'", "'.'", 
			"';'", "','", "'='", "'<'", "'<='", "'>'", "'>='", "'!='", "'=='", "'+'", 
			"'-'", "'*'", "'/'", "'&&'", "'||'", "'!'", "'('", "')'", "'['", "']'", 
			"'{'", "'}'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "TYPE", "STRUCT", "IF", "ELSE", "WHILE", "RETURN", "DOT", "SEMI", 
			"COMMA", "ASSIGN", "LT", "LE", "GT", "GE", "NE", "EQ", "PLUS", "MINUS", 
			"MUL", "DIV", "AND", "OR", "NOT", "LP", "RP", "LB", "RB", "LC", "RC", 
			"INT", "HEX_INT", "FLOAT", "CHAR", "ID", "WS", "INVALID_EXP"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public splLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "spl.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 36:
			INVALID_EXP_action((RuleContext)_localctx, actionIndex);
			break;
		}
	}
	private void INVALID_EXP_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:

			System.err.println("Error type A at Line " + getLine() + ": invalid expression " + getText());

			break;
		}
	}

	public static final String _serializedATN =
		"\u0004\u0000$\u00ed\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0003\u0000X\b\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r"+
		"\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001"+
		"\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001"+
		"\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0003"+
		"\u001d\u00ab\b\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0005\u001d\u00b0"+
		"\b\u001d\n\u001d\f\u001d\u00b3\t\u001d\u0003\u001d\u00b5\b\u001d\u0001"+
		"\u001e\u0003\u001e\u00b8\b\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0004"+
		"\u001e\u00bd\b\u001e\u000b\u001e\f\u001e\u00be\u0001\u001f\u0003\u001f"+
		"\u00c2\b\u001f\u0001\u001f\u0004\u001f\u00c5\b\u001f\u000b\u001f\f\u001f"+
		"\u00c6\u0001\u001f\u0001\u001f\u0004\u001f\u00cb\b\u001f\u000b\u001f\f"+
		"\u001f\u00cc\u0001 \u0001 \u0001 \u0003 \u00d2\b \u0001 \u0001 \u0001"+
		"!\u0001!\u0001!\u0001!\u0001!\u0003!\u00db\b!\u0001\"\u0001\"\u0005\""+
		"\u00df\b\"\n\"\f\"\u00e2\t\"\u0001#\u0004#\u00e5\b#\u000b#\f#\u00e6\u0001"+
		"#\u0001#\u0001$\u0001$\u0001$\u0000\u0000%\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!C\u0000E\"G#I$\u0001\u0000\n\u0002\u0000"+
		"++--\u0001\u000019\u0001\u000009\u0002\u0000XXxx\u0003\u000009AFaf\u0002"+
		"\u0000\'\'\\\\\u0007\u0000\"\"\'\'\\\\bbnnrrtt\u0003\u0000AZ__az\u0004"+
		"\u000009AZ__az\u0003\u0000\t\n\r\r  \u00f9\u0000\u0001\u0001\u0000\u0000"+
		"\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000"+
		"\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000"+
		"\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000"+
		"\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000"+
		"\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000"+
		"\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000"+
		"\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000"+
		"\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001"+
		"\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000"+
		"\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000"+
		"\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001"+
		"\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000"+
		"\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000"+
		"\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?"+
		"\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000E\u0001\u0000"+
		"\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000\u0000"+
		"\u0001W\u0001\u0000\u0000\u0000\u0003Y\u0001\u0000\u0000\u0000\u0005`"+
		"\u0001\u0000\u0000\u0000\u0007c\u0001\u0000\u0000\u0000\th\u0001\u0000"+
		"\u0000\u0000\u000bn\u0001\u0000\u0000\u0000\ru\u0001\u0000\u0000\u0000"+
		"\u000fw\u0001\u0000\u0000\u0000\u0011y\u0001\u0000\u0000\u0000\u0013{"+
		"\u0001\u0000\u0000\u0000\u0015}\u0001\u0000\u0000\u0000\u0017\u007f\u0001"+
		"\u0000\u0000\u0000\u0019\u0082\u0001\u0000\u0000\u0000\u001b\u0084\u0001"+
		"\u0000\u0000\u0000\u001d\u0087\u0001\u0000\u0000\u0000\u001f\u008a\u0001"+
		"\u0000\u0000\u0000!\u008d\u0001\u0000\u0000\u0000#\u008f\u0001\u0000\u0000"+
		"\u0000%\u0091\u0001\u0000\u0000\u0000\'\u0093\u0001\u0000\u0000\u0000"+
		")\u0095\u0001\u0000\u0000\u0000+\u0098\u0001\u0000\u0000\u0000-\u009b"+
		"\u0001\u0000\u0000\u0000/\u009d\u0001\u0000\u0000\u00001\u009f\u0001\u0000"+
		"\u0000\u00003\u00a1\u0001\u0000\u0000\u00005\u00a3\u0001\u0000\u0000\u0000"+
		"7\u00a5\u0001\u0000\u0000\u00009\u00a7\u0001\u0000\u0000\u0000;\u00aa"+
		"\u0001\u0000\u0000\u0000=\u00b7\u0001\u0000\u0000\u0000?\u00c1\u0001\u0000"+
		"\u0000\u0000A\u00ce\u0001\u0000\u0000\u0000C\u00da\u0001\u0000\u0000\u0000"+
		"E\u00dc\u0001\u0000\u0000\u0000G\u00e4\u0001\u0000\u0000\u0000I\u00ea"+
		"\u0001\u0000\u0000\u0000KL\u0005i\u0000\u0000LM\u0005n\u0000\u0000MX\u0005"+
		"t\u0000\u0000NO\u0005f\u0000\u0000OP\u0005l\u0000\u0000PQ\u0005o\u0000"+
		"\u0000QR\u0005a\u0000\u0000RX\u0005t\u0000\u0000ST\u0005c\u0000\u0000"+
		"TU\u0005h\u0000\u0000UV\u0005a\u0000\u0000VX\u0005r\u0000\u0000WK\u0001"+
		"\u0000\u0000\u0000WN\u0001\u0000\u0000\u0000WS\u0001\u0000\u0000\u0000"+
		"X\u0002\u0001\u0000\u0000\u0000YZ\u0005s\u0000\u0000Z[\u0005t\u0000\u0000"+
		"[\\\u0005r\u0000\u0000\\]\u0005u\u0000\u0000]^\u0005c\u0000\u0000^_\u0005"+
		"t\u0000\u0000_\u0004\u0001\u0000\u0000\u0000`a\u0005i\u0000\u0000ab\u0005"+
		"f\u0000\u0000b\u0006\u0001\u0000\u0000\u0000cd\u0005e\u0000\u0000de\u0005"+
		"l\u0000\u0000ef\u0005s\u0000\u0000fg\u0005e\u0000\u0000g\b\u0001\u0000"+
		"\u0000\u0000hi\u0005w\u0000\u0000ij\u0005h\u0000\u0000jk\u0005i\u0000"+
		"\u0000kl\u0005l\u0000\u0000lm\u0005e\u0000\u0000m\n\u0001\u0000\u0000"+
		"\u0000no\u0005r\u0000\u0000op\u0005e\u0000\u0000pq\u0005t\u0000\u0000"+
		"qr\u0005u\u0000\u0000rs\u0005r\u0000\u0000st\u0005n\u0000\u0000t\f\u0001"+
		"\u0000\u0000\u0000uv\u0005.\u0000\u0000v\u000e\u0001\u0000\u0000\u0000"+
		"wx\u0005;\u0000\u0000x\u0010\u0001\u0000\u0000\u0000yz\u0005,\u0000\u0000"+
		"z\u0012\u0001\u0000\u0000\u0000{|\u0005=\u0000\u0000|\u0014\u0001\u0000"+
		"\u0000\u0000}~\u0005<\u0000\u0000~\u0016\u0001\u0000\u0000\u0000\u007f"+
		"\u0080\u0005<\u0000\u0000\u0080\u0081\u0005=\u0000\u0000\u0081\u0018\u0001"+
		"\u0000\u0000\u0000\u0082\u0083\u0005>\u0000\u0000\u0083\u001a\u0001\u0000"+
		"\u0000\u0000\u0084\u0085\u0005>\u0000\u0000\u0085\u0086\u0005=\u0000\u0000"+
		"\u0086\u001c\u0001\u0000\u0000\u0000\u0087\u0088\u0005!\u0000\u0000\u0088"+
		"\u0089\u0005=\u0000\u0000\u0089\u001e\u0001\u0000\u0000\u0000\u008a\u008b"+
		"\u0005=\u0000\u0000\u008b\u008c\u0005=\u0000\u0000\u008c \u0001\u0000"+
		"\u0000\u0000\u008d\u008e\u0005+\u0000\u0000\u008e\"\u0001\u0000\u0000"+
		"\u0000\u008f\u0090\u0005-\u0000\u0000\u0090$\u0001\u0000\u0000\u0000\u0091"+
		"\u0092\u0005*\u0000\u0000\u0092&\u0001\u0000\u0000\u0000\u0093\u0094\u0005"+
		"/\u0000\u0000\u0094(\u0001\u0000\u0000\u0000\u0095\u0096\u0005&\u0000"+
		"\u0000\u0096\u0097\u0005&\u0000\u0000\u0097*\u0001\u0000\u0000\u0000\u0098"+
		"\u0099\u0005|\u0000\u0000\u0099\u009a\u0005|\u0000\u0000\u009a,\u0001"+
		"\u0000\u0000\u0000\u009b\u009c\u0005!\u0000\u0000\u009c.\u0001\u0000\u0000"+
		"\u0000\u009d\u009e\u0005(\u0000\u0000\u009e0\u0001\u0000\u0000\u0000\u009f"+
		"\u00a0\u0005)\u0000\u0000\u00a02\u0001\u0000\u0000\u0000\u00a1\u00a2\u0005"+
		"[\u0000\u0000\u00a24\u0001\u0000\u0000\u0000\u00a3\u00a4\u0005]\u0000"+
		"\u0000\u00a46\u0001\u0000\u0000\u0000\u00a5\u00a6\u0005{\u0000\u0000\u00a6"+
		"8\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005}\u0000\u0000\u00a8:\u0001"+
		"\u0000\u0000\u0000\u00a9\u00ab\u0007\u0000\u0000\u0000\u00aa\u00a9\u0001"+
		"\u0000\u0000\u0000\u00aa\u00ab\u0001\u0000\u0000\u0000\u00ab\u00b4\u0001"+
		"\u0000\u0000\u0000\u00ac\u00b5\u00050\u0000\u0000\u00ad\u00b1\u0007\u0001"+
		"\u0000\u0000\u00ae\u00b0\u0007\u0002\u0000\u0000\u00af\u00ae\u0001\u0000"+
		"\u0000\u0000\u00b0\u00b3\u0001\u0000\u0000\u0000\u00b1\u00af\u0001\u0000"+
		"\u0000\u0000\u00b1\u00b2\u0001\u0000\u0000\u0000\u00b2\u00b5\u0001\u0000"+
		"\u0000\u0000\u00b3\u00b1\u0001\u0000\u0000\u0000\u00b4\u00ac\u0001\u0000"+
		"\u0000\u0000\u00b4\u00ad\u0001\u0000\u0000\u0000\u00b5<\u0001\u0000\u0000"+
		"\u0000\u00b6\u00b8\u0005-\u0000\u0000\u00b7\u00b6\u0001\u0000\u0000\u0000"+
		"\u00b7\u00b8\u0001\u0000\u0000\u0000\u00b8\u00b9\u0001\u0000\u0000\u0000"+
		"\u00b9\u00ba\u00050\u0000\u0000\u00ba\u00bc\u0007\u0003\u0000\u0000\u00bb"+
		"\u00bd\u0007\u0004\u0000\u0000\u00bc\u00bb\u0001\u0000\u0000\u0000\u00bd"+
		"\u00be\u0001\u0000\u0000\u0000\u00be\u00bc\u0001\u0000\u0000\u0000\u00be"+
		"\u00bf\u0001\u0000\u0000\u0000\u00bf>\u0001\u0000\u0000\u0000\u00c0\u00c2"+
		"\u0005-\u0000\u0000\u00c1\u00c0\u0001\u0000\u0000\u0000\u00c1\u00c2\u0001"+
		"\u0000\u0000\u0000\u00c2\u00c4\u0001\u0000\u0000\u0000\u00c3\u00c5\u0007"+
		"\u0002\u0000\u0000\u00c4\u00c3\u0001\u0000\u0000\u0000\u00c5\u00c6\u0001"+
		"\u0000\u0000\u0000\u00c6\u00c4\u0001\u0000\u0000\u0000\u00c6\u00c7\u0001"+
		"\u0000\u0000\u0000\u00c7\u00c8\u0001\u0000\u0000\u0000\u00c8\u00ca\u0005"+
		".\u0000\u0000\u00c9\u00cb\u0007\u0002\u0000\u0000\u00ca\u00c9\u0001\u0000"+
		"\u0000\u0000\u00cb\u00cc\u0001\u0000\u0000\u0000\u00cc\u00ca\u0001\u0000"+
		"\u0000\u0000\u00cc\u00cd\u0001\u0000\u0000\u0000\u00cd@\u0001\u0000\u0000"+
		"\u0000\u00ce\u00d1\u0005\'\u0000\u0000\u00cf\u00d2\u0003C!\u0000\u00d0"+
		"\u00d2\b\u0005\u0000\u0000\u00d1\u00cf\u0001\u0000\u0000\u0000\u00d1\u00d0"+
		"\u0001\u0000\u0000\u0000\u00d2\u00d3\u0001\u0000\u0000\u0000\u00d3\u00d4"+
		"\u0005\'\u0000\u0000\u00d4B\u0001\u0000\u0000\u0000\u00d5\u00d6\u0005"+
		"\\\u0000\u0000\u00d6\u00db\u0007\u0006\u0000\u0000\u00d7\u00d8\u0005\\"+
		"\u0000\u0000\u00d8\u00d9\u0005x\u0000\u0000\u00d9\u00db\u0007\u0004\u0000"+
		"\u0000\u00da\u00d5\u0001\u0000\u0000\u0000\u00da\u00d7\u0001\u0000\u0000"+
		"\u0000\u00dbD\u0001\u0000\u0000\u0000\u00dc\u00e0\u0007\u0007\u0000\u0000"+
		"\u00dd\u00df\u0007\b\u0000\u0000\u00de\u00dd\u0001\u0000\u0000\u0000\u00df"+
		"\u00e2\u0001\u0000\u0000\u0000\u00e0\u00de\u0001\u0000\u0000\u0000\u00e0"+
		"\u00e1\u0001\u0000\u0000\u0000\u00e1F\u0001\u0000\u0000\u0000\u00e2\u00e0"+
		"\u0001\u0000\u0000\u0000\u00e3\u00e5\u0007\t\u0000\u0000\u00e4\u00e3\u0001"+
		"\u0000\u0000\u0000\u00e5\u00e6\u0001\u0000\u0000\u0000\u00e6\u00e4\u0001"+
		"\u0000\u0000\u0000\u00e6\u00e7\u0001\u0000\u0000\u0000\u00e7\u00e8\u0001"+
		"\u0000\u0000\u0000\u00e8\u00e9\u0006#\u0000\u0000\u00e9H\u0001\u0000\u0000"+
		"\u0000\u00ea\u00eb\t\u0000\u0000\u0000\u00eb\u00ec\u0006$\u0001\u0000"+
		"\u00ecJ\u0001\u0000\u0000\u0000\u000e\u0000W\u00aa\u00b1\u00b4\u00b7\u00be"+
		"\u00c1\u00c6\u00cc\u00d1\u00da\u00e0\u00e6\u0002\u0006\u0000\u0000\u0001"+
		"$\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}